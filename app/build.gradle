/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    // picocli
    implementation 'info.picocli:picocli:4.7.7'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.7'

    
    // dotenv-java
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.encli.App'
}

// Added from picocli docs
compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}


jar {
    manifest {
        attributes(
            'Main-Class': application.mainClass
        )
    }

    // Without this, I get a NoClassDefFoundError from picocli/CommandLine
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// A duplicates strategy must be set
tasks.named('jar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}